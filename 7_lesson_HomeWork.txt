# Установить пакеты необходимые для дальнейшей установки и настройки:
-- sudo apt -y install gnupg2 wget nano net-tools

# Добавить необходимый репозиторий:
-- sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

# Импортировать ключ GPG для репозитория:
-- sudo wget -qO /etc/apt/trusted.gpg.d/pgdg.asc https://www.postgresql.org/media/keys/ACCC4CF8.asc

# Обновить список пакетов apt:
-- sudo apt -y update

# Установить PostgreSQL14:
-- sudo apt -y install postgresql-14

# Проверить статус запуска PostgreSQL14:
-- systemctl status postgresql
-- sudo -u postgres pg_lsclusters

# Зайти под пользователем postgres:
-- sudo -i -u postgres

# Подключиться к экземпляру PostgreSQL:
-- psql

# Создать базу данных:
-- CREATE DATABASE testdb;

# Подключиться к базе данных:
-- \с testdb;

# создайте новую схему testnm:
-- create schema testnm;

# создайте новую таблицу t1 с одной колонкой c1 типа integer и вставьте строку со значением c1=1:
-- create table testnm.t1(c1 int);
-- insert into testnm.t1(c1) values('1');  

# Проверить содержимое ттаблицы:
-- postgres=# select * from testnm.t1;
## Вывод:
testdb=# select * from testnm.t1;
 c1
----
  1
(1 row)

# создайте новую роль readonly:
-- CREATE ROLE readonly LOGIN ENCRYPTED PASSWORD 'QAZxsw123';

# дайте новой роли право на подключение к базе данных testdb:
-- GRANT CONNECT ON DATABASE testdb TO readonly;

# дайте новой роли право на использование схемы testnm:
-- \c testdb;
-- GRANT USAGE ON SCHEMA testnm TO readonly;

# дайте новой роли право на select для всех таблиц схемы testnm:
-- GRANT SELECT ON ALL TABLES IN SCHEMA testnm TO readonly;

# создайте пользователя testread с паролем test123:
-- CREATE USER testread WITH PASSWORD 'test123' IN ROLE readonly;

# зайдите под пользователем testread в базу данных testdb:
## Разрешить подключение в файле pg_hba.conf, добавить в конце файла значения:
-- local   all   all                  trust
-- host    all   all   127.0.0.1/32   trust
### далее заходим прод пользователем:
--  psql -h 127.0.0.1 -U testread -d testdb -W

#сделайте select * from t1;:
-- по умолчанию используется схема public, если не конкретизировать месо хранения таблицы получим следующую ошибку:
testdb=> select * from t1;
ERROR:  relation "t1" does not exist
LINE 1: select * from t1;

## Решение: 
testdb=> select * from testnm.t1;
 c1
----
  1
(1 row)

### теперь попробуйте выполнить команду create table t2(c1 integer); insert into t2 values (2);
-- Так же таблица создалась в схеме public. Как убрать эти права и работу по умолчанию в сехеме public подсмотрел в шпаргалке.
\c testdb postgres; 
REVOKE CREATE on SCHEMA public FROM public; - отзывает права на создание в схеме public для роли public
REVOKE ALL on DATABASE testdb FROM public; - Отзывает общие привелегии в базе testdb для роли public
\c testdb testread; 